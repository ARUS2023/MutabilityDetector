#summary Quick 'n' dirty list of things that need done.
#labels Phase-Requirements,Phase-Implementation
= To-Do List =
(in no particular order)

 * Add JUnit documentation to Getting Started guide
 * Change 'not declared final' rule to, not sub-classable rule, which checks either it's declared final or it's constructors are all private.
 * Create a video to show off the unit testing capability of the tool
 * Add code location information to the verbose output, keep reason string constant.
 * Create a new `CodeLocation` implementation which includes the line number of the offending reason (i.e. where a mutable type is assigned to a field)
 * Admit defeat and hardcode java.lang.String as immutable. Probably BigDecimal as well.

* ~~Create an `allowingSubclassing()` allowed reason for unit tests (mainly for classes not marked as final)~~
 * ~~Create a new `CodeLocation` for fields.~~
 * ~~Remove `assertThat` method from MutabilityAssert.~~
 * ~~Add 0.03 release jar to google code download page, deprecate 0.02~~ (Now has maven support)
 * ~~Get the Hudson build of ClientOfMutabilityDetector working properly~~
 * ~~Move benchmark code into a separate source directory which isn't included in deliverable jar~~
 * ~~Make a prioritised list of the limitations of the analysis performed and the work required to fix them~~
 * ~~Investigate getting a release into Maven Central~~
 * ~~Annotate ignored unit tests with a brief overview of why they're ignored~~
 * ~~Gather more immutable types from the JDK which can be tested~~
 * ~~Find tests using ad-hoc assertion methods and make them consistent~~
 * ~~Produce materials to present a lightning talk~~
 * ~~Create a google group for the project~~